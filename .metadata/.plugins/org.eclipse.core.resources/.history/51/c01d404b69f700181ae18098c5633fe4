package for_ds_final_colin_tim;

import java.util.*;

public class SeparateChainingHashTable2 {

	private static final int DEFAULT_TABLE_SIZE = 101;
	private List<Contact> [] nameList, numberList;//The Hash list
	private int currentSize;//number of Contacts in the table
	
	SeparateChainingHashTable2() {
		
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	
	public boolean insert(Contact contact) {//TODO:
		return false;
	}
	
	public boolean insert(String theName, String theNumber) {//TODO:
		return false;
	}
	
	public boolean contains() {//TODO:
		return false;
	}
	
	public boolean delete() {//TODO:
		return false;
	}
	
	public int size() {//returns the current size
		return currentSize;
	}//size
	
	public void printAllContacts() {//TODO:
		
	}
	
	private void rehash() {//TODO: 
	
	}

	private int myHash(String x) {//TODO:
		return -1;
	}
	
	private static int nextPrime(int n) {//Finds the next prime number
		n++;
		while(!isPrime(n)) {
			n+=2;
		}
		return n;
	}//nextPrime

	private static boolean isPrime(int n) {//Returns true or false if n is prime
        if (n == 2) 
            return true;
        if (n < 2 || n % 2 == 0) 
            return false;
        for (int i = 3; i * i <= n; i += 2)
            if (n % i == 0) 
                return false;
        return true;
	}//isPrime
}
